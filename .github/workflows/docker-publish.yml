# .github/workflows/docker-image.yml

name: Build and Push Docker Images

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: docker.io
  # Altera o IMAGE_NAME para usar o username correto do Docker Hub.
  # Assumindo que o nome do seu repositório no GitHub seja 'hunyuan' (ou o nome do seu projeto).
  IMAGE_NAME: ${{ github.repository_owner == 'fabricioramorim' && 'fabrioceras' || github.repository_owner }}/${{ github.event.repository.name }}
  DOCKER_BUILDKIT: 1

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      # --- Limpeza de disco agressiva no runner ---
      - name: Aggressive Free disk space on runner
        run: |
          echo "--- Disk space BEFORE aggressive cleanup ---"
          df -h

          # Remove pacotes desnecessários e caches do apt
          sudo apt-get autoremove -y
          sudo apt-get clean
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf /usr/share/swift
          sudo rm -rf /usr/share/powershell
          sudo rm -rf /usr/local/share/chromium
          sudo rm -rf /usr/local/.ghcup

          # Limpa o cache do Docker no runner
          sudo docker system prune --all --force --volumes
          sudo rm -rf /var/lib/docker/*

          echo "--- Disk space AFTER aggressive cleanup ---"
          df -h
      
      # --- Cache para dependências Pip (Python) ---
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.ref_name }}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Check disk space after build
        run: df -h
